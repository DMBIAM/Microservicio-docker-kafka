version: '3.8'

services:
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CREATE_TOPICS: "eventos:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Aquí se especifica la conexión a Zookeeper
    depends_on:
      - zookeeper
    networks:
      - kong-net

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kong-net

  consumer:
    build: 
      context: ./consumer
    volumes:
      - ./consumer:/app
    depends_on:
      - kafka
    networks:
      - kong-net

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kong-net

  producer:
    build:
      context: ./producer
    volumes:
      - ./producer:/app
    depends_on:
      - kafka
    networks:
      - kong-net

  kong:
    image: kong
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_PASSWORD: "password"
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    depends_on:
      - kong-database
    networks:
      - kong-net

  kong-database:
    image: postgres:9.6
    environment:
      POSTGRES_DB: "kong"
      POSTGRES_USER: "kong"
      POSTGRES_PASSWORD: "password"
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - kong-net

networks:
  kong-net:

volumes:
  mongodb_data:
  kong_data:
