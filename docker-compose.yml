version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - kafka-net
  
  kafka-broker:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-broker
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker:9093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_CREATE_TOPICS: "eventos:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: kafka-ui
    depends_on:
      - zookeeper
      - kafka-broker
    networks:
      - kafka-net
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTER_0_NAME: local
      KAFKA_CLUSTER_0_BOOTSTRAP: kafka-broker:9092
      KAFKA_CLUSTER_0_ZOOKEEPER: zookeeper:2181

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    hostname: kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka-broker:9093
    depends_on:
      - kafka-broker

  producer:
    hostname: producer
    container_name: producer
    build:
      context: ./producer
    volumes:
      - ./producer:/app
    depends_on:
      - kafka-broker
    networks:
      - kafka-net

networks:
  kafka-net:
